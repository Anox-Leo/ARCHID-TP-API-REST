---
openapi: 3.1.0
info:
  title: User API
  description: This is the API of the User service
  contact:
    email: helene.coullon@imt-atlantique.fr
  license:
    name: GPL v3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.0
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /:
    get:
      tags:
      - developers
      summary: home page of the service
      description: |
        Nothing to do
      operationId: home
      responses:
        "200":
          description: welcome message
          content:
            text/html:
              schema:
                type: string
                example: <h1>Test</h1>
  /users:
    get:
      tags:
      - developers
      summary: get the full JSON database
      description: |
        Nothing to do
      operationId: get_json
      responses:
        "200":
          description: full JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsers'
  /users/{userid}:
    get:
      tags:
      - developers
      summary: get the bookings from a user id
      description: By passing in the appropriate options, you can get bookings of a user
      operationId: get_booking_for_user
      parameters:
      - name: userid
        in: path
        description: User ID.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Bookings of the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingsUser'
        "400":
          description: bad input parameter
  /movies/{userid}:
    get:
      tags:
        - developers
      summary: get the movies from a user id
      description: By passing in the appropriate options, you can get movies details from user's bookings
      operationId: get_movies_for_user
      parameters:
        - name: userid
          in: path
          description: User ID.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Movies reserved by the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoviesUser'
        "400":
          description: bad input parameter
components:
  schemas:
    AllBookings:
      type: array
      items:
        $ref: '#/components/schemas/BookingsUser'
    BookingsUser:
      required:
      - dates
      - userid
      type: object
      properties:
        userid:
          type: string
          example: chris_rivers
        dates:
          type: array
          items:
            $ref:
    DateItem:
      required:
        - date
        - movies
      type: object
      properties:
        date:
          type: string
          example: "20151201"
        movies:
          type: array
          items:
            type: string
            example: 276c79ec-a26a-40a6-b3d3-fb242a5947b6
    MoviesUser:
      required:
        - title
        - rating
        - director
        - id
      type: object
      properties:
        title:
          type: string
          example: The Good Dinosaur
        rating:
          type: float
          example: 7.4
        director:
          type: string
          example: Peter Sohn
        id:
          type: string
          example: 720d006c-3a57-4b6a-b18f-9b713b073f3c